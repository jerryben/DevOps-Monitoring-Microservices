# .gitlab-ci.yml (for alerting-service only)
stages:
  - build
  - docker
  - manifest
  - sync

variables:
  DOCKER_IMAGE: "digtranza/alerting-service"
  DOCKER_TAG: "latest"
  MANIFEST_FILE: "manifests/alerting-service.yaml"
  GITHUB_REPO: "https://github.com/jerryben/DevOps-Monitoring-Microservices.git"
  GITLAB_REPO: "https://gitlab.com/jerryben/DevOps-Monitoring-Microservices.git"

# Cache node_modules for faster builds
cache:
  paths:
    - alerting-service/node_modules/

before_script:
  - echo "Starting CI pipeline for alerting-service"

# Define a common ruleset to apply to all jobs
workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      changes:
        - alerting-service/**/*
    - if: $CI_COMMIT_BRANCH == "main"
      changes:
        - alerting-service/**/*

build:
  stage: build
  image: node:16
  script:
    - cd alerting-service
    - echo "Installing dependencies..."
    - npm install
    - echo "Running tests..."
    - npm test
    - echo "Building application..."
    - npm run build
  artifacts:
    paths:
      - alerting-service/
    expire_in: 1 hour

docker-build:
  stage: docker
  image: docker:20.10
  services:
    - docker:20.10-dind
  variables:
    DOCKER_HOST: tcp://docker:2376
    DOCKER_TLS_CERTDIR: "/certs"
  script:
    - echo "Logging in to DockerHub..."
    - docker login -u "$DOCKERHUB_USERNAME" -p "$DOCKERHUB_TOKEN"
    - echo "Building Docker image..."
    - cd alerting-service
    - docker build -t $DOCKER_IMAGE:$DOCKER_TAG .
    - echo "Pushing to DockerHub..."
    - docker push $DOCKER_IMAGE:$DOCKER_TAG
    - echo "Image pushed successfully: $DOCKER_IMAGE:$DOCKER_TAG"

update-manifest:
  stage: manifest
  image: alpine:3.14
  script:
    - echo "Updating manifest with new image tag..."
    - apk add --no-cache yq
    - cd manifests
    - yq eval ".spec.template.spec.containers[0].image = \"$DOCKER_IMAGE:$DOCKER_TAG\"" -i alerting-service.yaml
    - echo "Updated manifest:"
    - cat alerting-service.yaml
  artifacts:
    paths:
      - manifests/alerting-service.yaml
    expire_in: 1 week

sync-to-github:
  stage: sync
  image: alpine:3.14
  script:
    - echo "Setting up SSH..."
    - apk add --no-cache git openssh-client
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY_B64" | base64 -d > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ssh-keyscan github.com >> ~/.ssh/known_hosts
    - git config --global user.email "gitlab-ci@example.com"
    - git config --global user.name "GitLab CI"
    - echo "Syncing changes back to GitHub..."
    - git clone $GITHUB_REPO repo
    - cd repo
    - git checkout main
    - cp ../manifests/alerting-service.yaml manifests/
    - git add manifests/alerting-service.yaml
    - git commit -m "CI: Updated alerting-service image to $DOCKER_IMAGE:$DOCKER_TAG"
    - git push origin main
    - echo "Changes pushed to GitHub successfully"