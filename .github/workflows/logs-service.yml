---
name: Logs Service CI/CD

on:
  push:
    branches: [ main ]
    paths:
      - 'logs-service/**'
      - 'manifests/logs-service.yaml'

jobs:
  build-test-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Cache Go Modules
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: go-${{ runner.os }}-${{ hashFiles('logs-service/go.sum') }}
          restore-keys: |
            go-${{ runner.os }}-

      - name: Build
        working-directory: ./logs-service/app  # ← Changed to app directory
        run: |
          mkdir -p ../bin
          go build -o ../bin/logs-service .  # ← Build from app/ to bin/

      - name: Docker Operations
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker pull ${{ secrets.DOCKER_USERNAME }}/logs-service:latest || true
          docker build \
            --cache-from=${{ secrets.DOCKER_USERNAME }}/logs-service:latest \
            -t ${{ secrets.DOCKER_USERNAME }}/logs-service:${{ github.run_number }} \
            --build-arg BINARY_PATH=bin/logs-service \  # ← Pass binary path
            ./logs-service/
          docker push ${{ secrets.DOCKER_USERNAME }}/logs-service:${{ github.run_number }}
          docker tag ${{ secrets.DOCKER_USERNAME }}/logs-service:${{ github.run_number }} ${{ secrets.DOCKER_USERNAME }}/logs-service:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/logs-service:latest

      - name: Update Kubernetes Manifest
        run: |
          sed -i 's|image: .*/logs-service:.*|image: ${{ secrets.DOCKER_USERNAME }}/logs-service:${{ github.run_number }}|g' manifests/logs-service.yaml
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add manifests/logs-service.yaml
          git commit -m "CI: Updated logs-service to build ${{ github.run_number }}"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}




# name: Logs Service CI/CD

# on:
#   push:
#     branches: [ main ]
#     paths:
#       - 'logs-service/**'
#       - 'manifests/logs-service.yaml'

# jobs:
#   build-test-push:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout Code
#         uses: actions/checkout@v4

#       - name: Install Go
#         uses: actions/setup-go@v4
#         with:
#           go-version: '1.21'

#       - name: Cache Go Modules
#         uses: actions/cache@v3
#         with:
#           path: ~/go/pkg/mod
#           key: go-${{ runner.os }}-${{ hashFiles('logs-service/go.sum') }}
#           restore-keys: |
#             go-${{ runner.os }}-

#       - name: Build
#         working-directory: ./logs-service
#         run: go build -o bin/

#       - name: Docker Operations
#         run: |
#           echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
#           docker pull ${{ secrets.DOCKER_USERNAME }}/logs-service:latest || true
#           docker build --cache-from=${{ secrets.DOCKER_USERNAME }}/logs-service:latest -t ${{ secrets.DOCKER_USERNAME }}/logs-service:${{ github.run_number }} ./logs-service/
#           docker push ${{ secrets.DOCKER_USERNAME }}/logs-service:${{ github.run_number }}
#           docker tag ${{ secrets.DOCKER_USERNAME }}/logs-service:${{ github.run_number }} ${{ secrets.DOCKER_USERNAME }}/logs-service:latest
#           docker push ${{ secrets.DOCKER_USERNAME }}/logs-service:latest

#       - name: Update Kubernetes Manifest
#         run: |
#           sed -i 's|image: .*/logs-service:.*|image: ${{ secrets.DOCKER_USERNAME }}/logs-service:${{ github.run_number }}|g' manifests/logs-service.yaml
#           git add manifests/logs-service.yaml
#           git commit -m "CI: Updated logs-service to build ${{ github.run_number }}"
#           git push
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
