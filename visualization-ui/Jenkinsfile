pipeline {
    agent any

    tools {
        maven 'maven-latest'
        jdk 'JDK-17'
        nodejs 'nodejs-latest'
    }

    environment {
        BACKEND_IMAGE = "digtranza/visualization-backend"
        FRONTEND_IMAGE = "digtranza/visualization-frontend"
    }

    stages {
        stage('Checkout Code') {
            steps {
                git branch: 'main', url: 'https://github.com/jerryben/DevOps-Monitoring-Microservices.git'
                sh 'ls -la'  // Debug: Check the folder structure
            }
        }

        stage('Build Backend') {
            steps {
                sh '''
                cd backend
                ls -la  # Debug: Ensure the pom.xml exists
                mvn clean package -DskipTests
                '''
            }
        }

        stage('Build Frontend') {
            steps {
                sh '''
                cd frontend
                ls -la  # Debug: Check the React project files
                npm install
                npm run build
                '''
            }
        }

        stage('Build and Push Backend Image') {
            steps {
                withDockerRegistry([credentialsId: 'Docker-Token', url: '']) {
                    sh '''
                    cd backend
                    docker build -t $BACKEND_IMAGE:latest .
                    docker push $BACKEND_IMAGE:latest
                    '''
                }
            }
        }

        stage('Build and Push Frontend Image') {
            steps {
                withDockerRegistry([credentialsId: 'Docker-Token', url: '']) {
                    sh '''
                    cd frontend
                    docker build -t $FRONTEND_IMAGE:latest .
                    docker push $FRONTEND_IMAGE:latest
                    '''
                }
            }
        }
    }

    post {
        success {
            echo "Build and deployment successful!"
        }
        failure {
            echo "Build failed!"
        }
    }
}
