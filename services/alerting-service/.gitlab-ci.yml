workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      changes:
        - services/alerting-service/**/*
    - if: $CI_COMMIT_BRANCH == "main"
      changes:
        - services/alerting-service/**/*
stages:
  - build
  - docker
  - manifest
  - sync
variables:
  DOCKER_IMAGE: "digtranza/alerting-service"
  DOCKER_TAG: "$CI_PIPELINE_IID" # Using pipeline ID as build number
  MANIFEST_FILE: "manifests/alerting-service.yaml"
  GITHUB_REPO: "https://github.com/jerryben/DevOps-Monitoring-Microservices.git"
cache:
  paths:
    - alerting-service/node_modules/
before_script:
  - echo "Starting CI pipeline for alerting-service"
build:
  stage: build
  image: node:16
  script:
    - cd services/alerting-service
    - npm install
    - npm run build
  artifacts:
    paths:
      - services/alerting-service/
    expire_in: 1 hour
docker-build:
  stage: docker
  image: docker:20.10
  services:
    - docker:20.10-dind
  variables:
    DOCKER_HOST: tcp://docker:2376
    DOCKER_TLS_CERTDIR: "/certs"
  script: |
    echo "Logging in to DockerHub..."
    docker login -u "$DOCKERHUB_USERNAME" -p "$DOCKERHUB_TOKEN"
    echo "Building Docker image..."
    cd services/alerting-service
    docker build -t $DOCKER_IMAGE:$DOCKER_TAG .
    docker tag $DOCKER_IMAGE:$DOCKER_TAG $DOCKER_IMAGE:latest
    echo "Pushing to DockerHub..."
    docker push $DOCKER_IMAGE:$DOCKER_TAG
    docker push $DOCKER_IMAGE:latest
    echo "Image pushed successfully: $DOCKER_IMAGE:$DOCKER_TAG"
update-manifest:
  stage: manifest
  image: alpine:3.14
  script: |
    echo "Updating manifest with new image tag..."
    apk add --no-cache yq
    cd manifests
    yq eval ".spec.template.spec.containers[0].image = \"$DOCKER_IMAGE:$DOCKER_TAG\"" -i alerting-service.yaml
    echo "Updated manifest:"
    cat alerting-service.yaml
  artifacts:
    paths:
      - manifests/alerting-service.yaml
    expire_in: 1 week
sync-to-github:
  stage: sync
  image: alpine:3.14
  variables:
    GITHUB_TOKEN: $GITHUB_ACCESS_TOKEN
  before_script:
    - apk add --no-cache git
  script: |-
    echo "Setting up Git..."
    git config --global user.email "gitlab-ci@example.com"
    git config --global user.name "GitLab CI"

    echo "Cloning repository..."
    git clone https://$GITHUB_TOKEN@github.com/jerryben/DevOps-Monitoring-Microservices.git repo
    cd repo

    echo "Updating manifest..."
    cp ../manifests/alerting-service.yaml manifests/
    git add manifests/alerting-service.yaml

    echo "Committing changes..."
    git commit -m "CI: Updated alerting-service image to $DOCKER_IMAGE:$DOCKER_TAG (GitLab Pipeline #$CI_PIPELINE_IID)"

    echo "Pushing to GitHub..."
    git push origin main
    echo "Changes pushed successfully"
